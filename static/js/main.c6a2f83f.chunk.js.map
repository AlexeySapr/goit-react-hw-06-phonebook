{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","constants/theme.js","components/container/Container.styled.jsx","components/container/Container.js","components/section/Section.styled.jsx","components/section/Section.js","redux/phonebook/phonebook-selectors.js","components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.js","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.js","components/contactFilter/ContactFilter.styled.jsx","components/contactFilter/ContactFilter.js","components/header/Header.styled.jsx","components/header/Header.js","App.js","index.js"],"names":["addContact","createAction","contact","payload","id","nanoid","name","number","delContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","phonebookPersistConfig","key","storage","blacklist","rootReducer","contacts","persistReducer","phonebookReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","theme","Object","freeze","colors","primary","white","borderColor","textColor","inputBoxShadow","Box","styled","div","Container","children","Title","h2","Section","title","getContacts","getFilter","FormContacts","form","props","InputLabel","label","FormInput","input","FormButton","button","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleNameChange","event","currentTarget","value","onSubmit","preventDefault","normalizedName","toLowerCase","replace","normalizedNumber","some","isInContacts","alert","type","onChange","pattern","required","List","ul","ListItem","li","Text","p","ItemBtn","ContactList","normalizedFilter","filteredContacts","includes","map","onClick","ContactFilter","Header","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c6a2f83f.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst addContact = createAction('phonebook/addContact', contact => {\r\n  return {\r\n    payload: {\r\n      id: nanoid(),\r\n      name: contact.name,\r\n      number: contact.number,\r\n    },\r\n  };\r\n});\r\n\r\nconst delContact = createAction('phonebook/delContact');\r\n\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\nexport { addContact, delContact, changeFilter };\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [actions.delContact]: (state, { payload }) => {\r\n    return state.filter(contact => contact.id !== payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\n\r\nimport phonebookReduser from './phonebook/phonebook-reducer';\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'items',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(phonebookPersistConfig, phonebookReduser),\r\n});\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","export const theme = Object.freeze({\n  colors: {\n    primary: '#57d0e6',\n    white: '#fff',\n    borderColor: '#bdbdbd',\n    textColor: '#212529',\n    inputBoxShadow: '0 0 0 0.2rem rgba(87, 208, 230, 0.5)',\n  },\n});\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1170px;\n  padding: 15px;\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <Box>{children}</Box>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { Box, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Box>\n      <Title>{title}</Title>\n      {children}\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","const getContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nexport { getContacts, getFilter };\r\n","import styled from '@emotion/styled';\n\nexport const FormContacts = styled.form`\n  border: ${props => `2px solid ${props.theme.colors.primary}`};\n  padding: 30px;\n  width: 500px;\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  margin-top: 5px;\n\n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n\nexport const FormButton = styled.button`\n  background-color: transparent;\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 120px;\n  font-size: 1rem;\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.white};\n    outline: 0;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\nimport {\n  FormContacts,\n  InputLabel,\n  FormInput,\n  FormButton,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleNameChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const ressetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const isInContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase().replace(/\\s+/g, '');\n    const normalizedNumber = number.replace(/\\D/g, '');\n    return contacts.some(contact => {\n      return (\n        contact.name.toLowerCase().replace(/\\s+/g, '') === normalizedName ||\n        contact.number.replace(/\\D/g, '') === normalizedNumber\n      );\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (isInContacts({ name, number })) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    ressetForm();\n  };\n\n  return (\n    <FormContacts onSubmit={onSubmit}>\n      <InputLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </InputLabel>\n\n      <InputLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleNameChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </FormContacts>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  width: 380px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: ${props => `1px solid ${props.theme.colors.primary}`};\n`;\n\nexport const Text = styled.p`\n  font-size: 1.1rem;\n`;\n\nexport const ItemBtn = styled.button`\n  background-color: transparent;\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 75px;\n  font-size: 0.8rem;\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.white};\n    outline: 0;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { delContact } from '../../redux/phonebook/phonebook-actions';\nimport {\n  getContacts,\n  getFilter,\n} from '../../redux/phonebook/phonebook-selectors';\n\nimport { List, ListItem, Text, ItemBtn } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return (\n    <List>\n      {filteredContacts.map(contact => (\n        <ListItem key={contact.id}>\n          <Text>\n            {contact.name}: {contact.number}\n          </Text>\n          <ItemBtn\n            type=\"button\"\n            onClick={() => dispatch(delContact(contact.id))}\n          >\n            Delete\n          </ItemBtn>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const InputLabel = styled.label`\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  margin-left: 20px;\n\n  padding: 0.2rem 0.4rem;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\n\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport { InputLabel, FormInput } from './ContactFilter.styled';\n\nconst ContactFilter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <InputLabel>\n      Find contacts by name:\n      <FormInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => dispatch(changeFilter(event.currentTarget.value))}\n      ></FormInput>\n    </InputLabel>\n  );\n};\n\nexport default ContactFilter;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-align: center;\n  background-color: ${props => props.theme.colors.primary};\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Header.styled';\n\nconst Header = ({ title, children }) => {\n  return (\n    <>\n      <Title>{title}</Title>\n      {children}\n    </>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Header;\n","import Container from './components/container/Container';\nimport Section from './components/section/Section';\nimport ContactForm from './components/contactForm/ContactForm';\nimport ContactList from './components/contactList/ContactList';\n// import initData from './tempData/data.json';\nimport ContactFilter from './components/contactFilter/ContactFilter';\nimport Header from './components/header/Header';\n\nconst App = () => {\n  return (\n    <Header title=\"Phonebook\">\n      <Container>\n        <Section title={'Phonebook'}>\n          <ContactForm />\n        </Section>\n\n        <Section title={'Contacts'}>\n          <ContactFilter />\n          <ContactList />\n        </Section>\n      </Container>\n    </Header>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { ThemeProvider } from '@emotion/react';\nimport { theme } from './constants/theme';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}