{"version":3,"sources":["constants/theme.js","components/container/Container.styled.jsx","components/container/Container.js","components/section/Section.styled.jsx","components/section/Section.js","components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.js","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.js","components/contactFilter/ContactFilter.styled.jsx","components/contactFilter/ContactFilter.js","components/header/Header.styled.jsx","components/header/Header.js","App.js","index.js"],"names":["theme","Object","freeze","colors","primary","white","borderColor","textColor","inputBoxShadow","Box","styled","div","Container","children","Title","h2","Section","title","FormContacts","form","props","InputLabel","label","FormInput","input","FormButton","button","ContactForm","handleSubmit","useState","name","setName","number","setNumber","handleNameChange","event","currentTarget","value","onSubmit","preventDefault","type","onChange","pattern","required","List","ul","ListItem","li","Text","p","ItemBtn","ContactList","contacts","onDeleteContact","map","contact","onClick","id","ContactFilter","Header","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","isInContacts","normalizedName","toLowerCase","replace","normalizedNumber","some","useEffect","console","log","window","setItem","stringify","normalizedFilter","filteredContacts","includes","newContact","alert","nanoid","prev","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc7133ae.chunk.js","sourcesContent":["export const theme = Object.freeze({\n  colors: {\n    primary: '#57d0e6',\n    white: '#fff',\n    borderColor: '#bdbdbd',\n    textColor: '#212529',\n    inputBoxShadow: '0 0 0 0.2rem rgba(87, 208, 230, 0.5)',\n  },\n});\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1170px;\n  padding: 15px;\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <Box>{children}</Box>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { Box, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Box>\n      <Title>{title}</Title>\n      {children}\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const FormContacts = styled.form`\n  border: ${props => `2px solid ${props.theme.colors.primary}`};\n  padding: 30px;\n  width: 500px;\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  margin-top: 5px;\n\n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n\nexport const FormButton = styled.button`\n  background-color: transparent;\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 120px;\n  font-size: 1rem;\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.white};\n    outline: 0;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormContacts,\n  InputLabel,\n  FormInput,\n  FormButton,\n} from './ContactForm.styled';\n\nconst ContactForm = ({ handleSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const ressetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    handleSubmit({ name, number });\n    ressetForm();\n  };\n\n  return (\n    <FormContacts onSubmit={onSubmit}>\n      <InputLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </InputLabel>\n\n      <InputLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleNameChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </FormContacts>\n  );\n};\n\nContactForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  width: 380px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: ${props => `1px solid ${props.theme.colors.primary}`};\n`;\n\nexport const Text = styled.p`\n  font-size: 1.1rem;\n`;\n\nexport const ItemBtn = styled.button`\n  background-color: transparent;\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 75px;\n  font-size: 0.8rem;\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.white};\n    outline: 0;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { List, ListItem, Text, ItemBtn } from './ContactList.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ListItem key={contact.id}>\n          <Text>\n            {contact.name}: {contact.number}\n          </Text>\n          <ItemBtn type=\"button\" onClick={() => onDeleteContact(contact.id)}>\n            Delete\n          </ItemBtn>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const InputLabel = styled.label`\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  margin-left: 20px;\n\n  padding: 0.2rem 0.4rem;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { InputLabel, FormInput } from './ContactFilter.styled';\n\nconst ContactFilter = ({ value, onChange }) => {\n  return (\n    <InputLabel>\n      Find contacts by name:\n      <FormInput\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      ></FormInput>\n    </InputLabel>\n  );\n};\n\nContactFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ContactFilter;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-align: center;\n  background-color: ${props => props.theme.colors.primary};\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Header.styled';\n\nconst Header = ({ title, children }) => {\n  return (\n    <>\n      <Title>{title}</Title>\n      {children}\n    </>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport Container from './components/container/Container';\nimport Section from './components/section/Section';\nimport ContactForm from './components/contactForm/ContactForm';\nimport ContactList from './components/contactList/ContactList';\n// import initData from './tempData/data.json';\nimport ContactFilter from './components/contactFilter/ContactFilter';\nimport Header from './components/header/Header';\n\nconst App = () => {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  const addContact = newContact => {\n    const { name, number } = newContact;\n\n    if (isInContacts(newContact)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    setContacts(prev => [contact, ...prev]);\n  };\n\n  const delContact = contactId => {\n    setContacts(prev => prev.filter(contact => contact.id !== contactId));\n  };\n\n  const filterChange = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const isInContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase().replace(/\\s+/g, '');\n    const normalizedNumber = number.replace(/\\D/g, '');\n    return contacts.some(contact => {\n      return (\n        contact.name.toLowerCase().replace(/\\s+/g, '') === normalizedName ||\n        contact.number.replace(/\\D/g, '') === normalizedNumber\n      );\n    });\n  };\n\n  useEffect(() => {\n    console.log('contacts: ', contacts);\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return (\n    <Header title=\"Phonebook\">\n      <Container>\n        <Section title={'Phonebook'}>\n          <ContactForm handleSubmit={addContact} />\n        </Section>\n\n        <Section title={'Contacts'}>\n          <ContactFilter value={filter} onChange={filterChange} />\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContact={delContact}\n          />\n        </Section>\n      </Container>\n    </Header>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\nimport { theme } from './constants/theme';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}